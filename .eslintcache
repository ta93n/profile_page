[{"/Users/ta93n/profile_page/src/index.js":"1","/Users/ta93n/profile_page/src/App.js":"2","/Users/ta93n/profile_page/src/components/Header.js":"3","/Users/ta93n/profile_page/src/Components/Header.js":"4","/Users/ta93n/profile_page/src/Components/Footer.js":"5","/Users/ta93n/profile_page/src/Components/ScrollUp.js":"6","/Users/ta93n/profile_page/src/Components/Main.js":"7","/Users/ta93n/profile_page/src/Components/Work.js":"8","/Users/ta93n/profile_page/src/Components/Skill.js":"9"},{"size":488,"mtime":1607158478410,"results":"10","hashOfConfig":"11"},{"size":363,"mtime":1608188907514,"results":"12","hashOfConfig":"11"},{"size":310,"mtime":1606997134639,"results":"13","hashOfConfig":"11"},{"size":1623,"mtime":1607952280328,"results":"14","hashOfConfig":"11"},{"size":188,"mtime":1608376185476,"results":"15","hashOfConfig":"11"},{"size":551,"mtime":1608377009023,"results":"16","hashOfConfig":"11"},{"size":2987,"mtime":1608401957890,"results":"17","hashOfConfig":"11"},{"size":1388,"mtime":1608400926549,"results":"18","hashOfConfig":"11"},{"size":1903,"mtime":1608368906043,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1up3r5s",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"/Users/ta93n/profile_page/src/index.js",[],["41","42"],"/Users/ta93n/profile_page/src/App.js",[],"/Users/ta93n/profile_page/src/components/Header.js",[],"/Users/ta93n/profile_page/src/Components/Header.js",[],"/Users/ta93n/profile_page/src/Components/Footer.js",[],"/Users/ta93n/profile_page/src/Components/ScrollUp.js",[],"/Users/ta93n/profile_page/src/Components/Main.js",["43"],"/Users/ta93n/profile_page/src/Components/Work.js",["44"],"import React from 'react';\n\nclass Work extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state={isModalOpen: false};\n  }\n\n  handleClickWork() {\n    this.setState({isModalOpen: true});\n  }\n\n  handleClickClose() {\n    this.setState({isModalOpen: false});\n  }\n\n  render() {\n\n    let modal;\n\n    if(this.state.isModalOpen) {\n      modal = (\n        <div className=\"modal\">\n          <div className=\"modal-inner\">\n            <div className=\"modal-header\">\n              <h2>{this.props.name}</h2>\n            </div>\n            <div className=\"modal-introduction\">\n              <p>{this.props.introduction}</p>\n            </div>\n            <button\n              className=\"modal-close-btn\"\n              onClick={() => {this.handleClickClose()}}\n            >\n              閉じる\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        className=\"work\"\n        onClick={() => {this.handleClickWork()}}\n      >\n        <div className=\"work-image\">\n          <img src={this.props.image} />\n        </div>\n        <div className=\"work-contents\">\n          <div className=\"work-name\">\n            <h4>{this.props.name}</h4>\n          </div>\n          <div className=\"work-skill\">\n            <p>({this.props.skill})</p>\n          </div>\n        </div>\n        {modal}\n      </div>\n    );\n  }\n}\n\nexport default Work;\n","/Users/ta93n/profile_page/src/Components/Skill.js",["45","46"],"import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis } from 'recharts'; // importするrechartsコンポーネントの指定\n\nclass Skill extends React.Component {\n  render() {\n    const data = [\n  {\n    \"name\": \"HTML&CSS\",\n    \"習熟度\": 60\n  },\n  {\n    \"name\": \"JavaScript\",\n    \"習熟度\": 20\n  },\n  {\n    \"name\": \"Ruby\",\n    \"習熟度\": 50\n  },\n  {\n    \"name\": \"Rails\",\n    \"習熟度\": 50\n  },\n  {\n    \"name\": \"React\",\n    \"習熟度\": 10\n  },\n  {\n    \"name\": \"AWS\",\n    \"習熟度\": 20\n  },\n  {\n    \"name\": \"Git\",\n    \"習熟度\": 50\n  },\n  {\n    \"name\": \"Docker\",\n    \"習熟度\": 10\n  },\n  {\n    \"name\": \"CircleCI\",\n    \"習熟度\": 10\n  }\n]\n    return(\n      // グラフのサイズ・データ指定\n      <BarChart\n        width={1000}\n        height={500}\n        layout=\"vertical\" //グラフのX軸とY軸を入れ替え\n        data={data}\n        margin={{top: 30, right: 80, left: 80, bottom: 30}}\n      >\n        // X軸の設定\n        <XAxis\n          type=\"number\" // データタイプをnumberに変更\n          tickCount={2} // 軸の値の数を指定\n          domain={[0, 100]} // 0~100の範囲で表示させる\n          unit=\"%\" // 単位を指定\n          tickLine={false} // 軸目盛りの有無を指定\n        />\n        // Y軸の設定\n        <YAxis\n          type=\"category\" // データタイプをcategoryに変更\n          dataKey=\"name\"\n          tickLine={false} // 軸目盛りの有無を指定\n          mirror={true} // trueにするとラベルをグラフ内側に表示\n        />\n        <Bar\n          dataKey=\"習熟度\"\n          fill=\"#52de86\" // バーの色指定\n          barSize={30} // バーの大きさ指定\n          fillOpacity={0.4}　// バーの透過性指定\n          animationDuration={2000} // バーのアニメーション時間の指定\n        />\n      </BarChart>\n    );\n  }\n}\n\nexport default Skill;\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":39,"column":13,"nodeType":"53","endLine":39,"endColumn":34},{"ruleId":"51","severity":1,"message":"52","line":49,"column":11,"nodeType":"53","endLine":49,"endColumn":41},{"ruleId":"54","severity":1,"message":"55","line":52,"column":8,"nodeType":"56","endLine":54,"endColumn":9},{"ruleId":"54","severity":1,"message":"55","line":60,"column":11,"nodeType":"56","endLine":62,"endColumn":9},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-global-assign","no-unsafe-negation"]